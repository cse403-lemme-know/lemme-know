{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Test.svelte",
    "../src/Base.svelte"
  ],
  "sourcesContent": [
    "<style>\n  :global(body){\n    margin-bottom: 5em;\n    font-family: \"Source Sans Pro\", Ubuntu, \"Trebuchet MS\", Helvetica, Arial, sans-serif;\n  }\n\n  h1{\n    margin: 1em 0 0.25em 0;\n  }\n\n  p{\n    margin-left: 0.75em;\n  }\n\n  main{\n    display: flex;\n    flex-direction: column;\n    margin: auto;\n    width: 500px;\n    max-width: 100%;\n  }\n\n  .row{\n    display: flex;\n    flex-direction: row;\n  }\n\n  .row:not(:first-child){\n    margin-top: 1.5em;\n  }\n\n  .wrap{\n    flex: none;\n    margin-right: 1.5em;\n  }\n\n  .color{\n    flex: 1;\n  }\n\n</style>\n\n<script>\nimport { onMount } from 'svelte';\nimport Picker from './Picker.svelte';\n\nlet p1, p2;\n// For use from devTools\nonMount(() => {\n  console.log(\"You can use picker1 and picker2 from the console\")\n  console.log(\"Try picker1.setColor('#00ffff')\");\n  window.picker1 = p1\n  window.picker2 = p2\n})\n\nexport let color1 = \"#ff0000\";\nexport let color2 = \"#00ffff\";\n</script>\n\n\n<main>\n\n  <h1>Svelte Picker</h1>\n  <p><code>npm i svelte-picker</code></p>\n\n  <div class=\"row\">\n    <div class=\"wrap\">\n      <Picker \n        bind:this={p1}\n        on:colorChange={(e) => color1 = e.detail.hex} \n        startColor={color1}\n      />\n    </div>\n    <div class=\"color\" style=\"background-color:{color1}\"/>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"wrap\">\n      <Picker\n        bind:this={p2}\n        startColor={color2}\n        on:colorChange={(e) => {\n          color2 = e.detail.hex;\n          p1.setColor(e.detail)\n        }}\n      />\n    </div>\n    <div class=\"color\" style=\"background-color:{color2}\"/>\n  </div>\n</main>",
    "<style>\n.main-container, .main-container *{\n  box-sizing: border-box;\n}\n\n.main-container {\n\tdisplay: flex;\n  flex-direction: column;\n  width: 240px;\n\tbackground: #f2f2f2;\n\tborder-radius: 1px;\n\tbox-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.51);\n  -webkit-touch-callout: none;\n            user-select: none;\n}\n\n.colorsquare {\n  height: 160px;\n  width: 100%;\n  flex: none;\n  background: rgb(255, 0, 0);\n}\n\n.saturation-gradient {\n\tbackground: linear-gradient(to right, rgb(255, 255, 255), rgba(255, 255, 255, 0));\n\theight: 100%;\n  width: 100%;\n  flex: none;\n}\n\n.value-gradient {\n\tbackground: linear-gradient(to top, rgb(0, 0, 0), rgba(0, 0, 0, 0));\n\toverflow: hidden;\n\theight: 160px;\n}\n\n.colorsquare-picker {\n\tmargin: 0;\n\tpadding: 0;\n\twidth: 12px;\n\theight: 12px;\n\tborder-radius: 50%;\n\tborder: 2px solid #FFFB;\n\tposition: relative;\n\ttransform: translate(-9px, -9px);\n\tleft: 100%;\n}\n\n.colorsquare-event {\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\ttransform: translate(0, -16px);\n  touch-action: none;\n}\n\n.hue-selector {\n\tbackground: linear-gradient(to right, #ff0000 0%, #ffff00 17%, #00ff00 33%, #00ffff 50%, #0000ff 67%, #ff00ff 83%, #ff0000 100%);\n\tmargin: 15px 10px 10px 10px;\n\tborder-radius: 10px;\n\theight: 10px;\n}\n\n.hue-picker {\n\tbackground: #FFF;\n\twidth: 12px;\n\theight: 12px;\n\tborder-radius: 50%;\n\tleft: 0%;\n\tposition: relative;\n\tcursor: default;\n\ttransform: translate(-5px, -1px);\n\t-webkit-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n\t-moz-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n\tbox-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n}\n\n.hue-event {\n\twidth: 236px;\n\theight: 14px;\n\ttransform: translate(-8px, -14px);\n\tcursor: default;\n  touch-action: none;\n}\n\n.alpha-selector {\n\tbackground-image: linear-gradient(45deg, #808080 25%, transparent 25%), linear-gradient(-45deg, #808080 25%, transparent 25%), linear-gradient(45deg, transparent 75%, #808080 75%), linear-gradient(-45deg, transparent 75%, #808080 75%);\n\tbackground-size: 10px 10px;\n\tbackground-position: 0 0, 0 5px, 5px -5px, -5px 0px;\n\tmargin: 10px 10px;\n\tborder-radius: 10px;\n\theight: 10px;\n\tposition: relative;\n}\n\n.alpha-picker {\n\tbackground: #FFF;\n\twidth: 12px;\n\theight: 12px;\n\tborder-radius: 50%;\n\tleft: 100%;\n\tposition: relative;\n\tcursor: default;\n\ttransform: translate(-5px, -11px);\n\t-webkit-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n\t-moz-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n\tbox-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n}\n\n.alpha-event {\n\twidth: 236px;\n\theight: 14px;\n\ttransform: translate(-8px, -24px);\n\tcursor: default;\n  touch-action: none;\n}\n\n.alpha-value {\n\tbackground: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1));\n\twidth: 100%;\n\theight: 100%;\n\tborder-radius: 10px;\n}\n\n.color-info-box {\n\tmargin: 10px;\n  display: flex;\n}\n\n\n.color-picked-bg {\n\tbackground-image: linear-gradient(45deg, #808080 25%, transparent 25%), linear-gradient(-45deg, #808080 25%, transparent 25%), linear-gradient(45deg, transparent 75%, #808080 75%), linear-gradient(-45deg, transparent 75%, #808080 75%);\n\tbackground-size: 10px 10px;\n\tbackground-position: 0 0, 0 5px, 5px -5px, -5px 0px;\n\tborder: 1px solid #e3e3e3;\n\tborder-radius: 4px;\n\twidth: 18px;\n\theight: 18px;\n  flex: none;\n}\n\n.color-picked {\n  width: 100%;\n  height: 100%;\n\tbackground: rgba(255, 0, 0, 1);\n}\n\n.hex-text-block {\n  display: block;\n  margin-left: 3px;\n}\n\n.rgb-text-block{\n  display: block;\n  margin-left: 3px;\n}\n\n.text {\n  font-size: 0.6em;\n  background: white;\n\tborder-radius: 2px;\n\tborder: 1px solid #e3e3e3;\n\theight: 20px;\n  line-height: 20px;\n\ttext-align: center;\n  min-width: 1.75em;\n}\n\n.text-hex{\n  width: 6em;\n}\n\n.text-rgba{\n  width: 3em;\n}\n\n.rgb-text-div {\n  display: flex;\n  margin-left: auto;\n}\n\n.text-label {\n\tmargin-top: 5px;\n  font-size: 0.75em;\n  color:#888;\n  text-align: center;\n}\n</style>\n\n<script>\nimport {onMount, createEventDispatcher} from 'svelte';\nimport {rgb2hex} from './utils.js';\n\nlet className = \"\";\nexport {className as class};\n\nexport let alpha = true;\nexport let startColor = \"#ff0000\";\n\nonMount(() => {\n  document.addEventListener(\"mouseup\", mouseUp);\n  document.addEventListener(\"touchend\", mouseUp);\n  document.addEventListener(\"mousemove\", mouseMove);\n  document.addEventListener(\"touchmove\", touchMove);\n  document.addEventListener(\"touchstart\", killMouseEvents);\n  document.addEventListener(\"mousedown\", killTouchEvents);\n  setStartColor();\n});\n\nexport const setColor = (color) => {\n  if(typeof color !== \"string\"){\n    color = rgb2hex(color);\n  }\n   \n  startColor = color;\n  setStartColor(color);\n};\n\n// DOM\nlet colorSquarePicker;\nlet colorSquareEvent;\nlet alphaPicker;\nlet alphaEvent;\nlet huePicker;\nlet hueEvent;ยบ\nlet colorSquare;\n\nconst dispatch = createEventDispatcher();\nlet tracked;\nlet h = 1;\nlet s = 1;\nlet v = 1;\nlet a = 1;\nlet r = 255;\nlet g = 0;\nlet b = 0;\nlet hexValue = '#ff0000';\n\n\nfunction setStartColor() {\n  let hex = startColor.replace('#','');\n  if (hex.length !== 6 && hex.length !== 3 && !hex.match(/([^A-F0-9])/gi)) {\n    throw new Error(`Invalid property value startColor ${startColor}`);\n    return;\n  }\n  let hexFiltered='';\n  if (hex.length === 3)\n    hex.split('').forEach( c => {hexFiltered += c+c;});\n  else\n    hexFiltered=hex;\n  hexValue = hexFiltered;\n  r = parseInt(hexFiltered.substring(0,2), 16);\n  g = parseInt(hexFiltered.substring(2,4), 16);\n  b = parseInt(hexFiltered.substring(4,6), 16);\n  rgbToHSV(r,g,b,true);\n  updateCsPicker();\n  updateHuePicker();\n}\n\nconst handleRGBInput = (event) => {\n  setColor({r, g, b, a});\n}\n\nfunction killMouseEvents() {\n  alphaEvent.removeEventListener(\"mousedown\",alphaDown);\n  colorSquareEvent.removeEventListener(\"mousedown\",csDown);\n  hueEvent.removeEventListener(\"mousedown\",hueDown);\n  document.removeEventListener(\"mouseup\",mouseUp);\n  document.removeEventListener(\"mousemove\",mouseMove);\n  document.removeEventListener(\"touchstart\",killMouseEvents);\n  document.removeEventListener(\"mousedown\",killTouchEvents);\n}\n\nfunction killTouchEvents() {\n  alphaEvent.removeEventListener(\"touchstart\",alphaDownTouch);\n  colorSquareEvent.removeEventListener(\"touchstart\",csDownTouch);\n  hueEvent.removeEventListener(\"touchstart\",hueDownTouch);\n  document.removeEventListener(\"touchend\",mouseUp);\n  document.removeEventListener(\"touchmove\",touchMove);\n  document.removeEventListener(\"touchstart\",killMouseEvents);\n  document.removeEventListener(\"mousedown\",killTouchEvents);\n}\n\nfunction updateCsPicker() {\n  let xPercentage = s * 100;\n  let yPercentage = (1 - v) * 100;\n  colorSquarePicker.style.top = yPercentage + \"%\";\n  colorSquarePicker.style.left = xPercentage + \"%\";\n}\n\nfunction updateHuePicker() {\n  let xPercentage = h * 100;\n  huePicker.style.left = xPercentage + \"%\";\n}\n\nfunction colorChangeCallback() {\n  dispatch('colorChange', {\n  \t\t\tr: r,\n        g: g,\n        b: b,\n        a: a\n  \t\t});\n}\n\nfunction mouseMove(event) {\n if (tracked) {\n  let mouseX = event.clientX;\n  let mouseY = event.clientY;\n  let trackedPos = tracked.getBoundingClientRect();\n  let xPercentage, yPercentage, picker;\n  switch (tracked) {\n   case colorSquareEvent:\n    xPercentage = (mouseX - trackedPos.x) / 240 * 100;\n    yPercentage = (mouseY - trackedPos.y) / 160 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    (yPercentage > 100) ? yPercentage = 100: (yPercentage < 0) ? yPercentage = 0 : null;\n    yPercentage = yPercentage.toFixed(2);\n    xPercentage = xPercentage.toFixed(2);\n    colorSquarePicker.style.top = yPercentage + \"%\";\n    colorSquarePicker.style.left = xPercentage + \"%\";\n    s = xPercentage / 100;\n    v = 1 - yPercentage / 100;\n    colorChange();\n    break;\n   case hueEvent:\n    xPercentage = (mouseX - 10 - trackedPos.x) / 220 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    xPercentage = xPercentage.toFixed(2);\n    huePicker.style.left = xPercentage + \"%\";\n    h = xPercentage / 100;\n    hueChange();\n    break;\n   case alphaEvent:\n    xPercentage = (mouseX - 10 - trackedPos.x) / 220 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    xPercentage = xPercentage.toFixed(2);\n    alphaPicker.style.left = xPercentage + \"%\";\n    a = xPercentage / 100;\n    colorChange();\n    break;\n  }\n\n }\n\n}\n\nfunction touchMove(event) {\n if (tracked) {\n  let mouseX = event.touches[0].clientX;\n  let mouseY = event.touches[0].clientY;\n  let trackedPos = tracked.getBoundingClientRect();\n  let xPercentage, yPercentage, picker;\n  switch (tracked) {\n   case colorSquareEvent:\n    xPercentage = (mouseX - trackedPos.x) / 240 * 100;\n    yPercentage = (mouseY - trackedPos.y) / 160 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    (yPercentage > 100) ? yPercentage = 100: (yPercentage < 0) ? yPercentage = 0 : null;\n    yPercentage = yPercentage.toFixed(2);\n    xPercentage = xPercentage.toFixed(2);\n    colorSquarePicker.style.top = yPercentage + \"%\";\n    colorSquarePicker.style.left = xPercentage + \"%\";\n    s = xPercentage / 100;\n    v = 1 - yPercentage / 100;\n    colorChange();\n    break;\n   case hueEvent:\n    xPercentage = (mouseX - 10 - trackedPos.x) / 220 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    xPercentage = xPercentage.toFixed(2);\n    huePicker.style.left = xPercentage + \"%\";\n    h = xPercentage / 100;\n    hueChange();\n    break;\n   case alphaEvent:\n    xPercentage = (mouseX - 10 - trackedPos.x) / 220 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    xPercentage = xPercentage.toFixed(2);\n    alphaPicker.style.left = xPercentage + \"%\";\n    a = xPercentage / 100;\n    colorChange();\n    break;\n  }\n\n }\n\n}\n\nfunction csDown(event) {\n tracked = event.currentTarget;\n let xPercentage = ((event.offsetX + 1) / 240) * 100;\n let yPercentage = ((event.offsetY + 1) / 160) * 100;\n yPercentage = yPercentage.toFixed(2);\n xPercentage = xPercentage.toFixed(2)\n colorSquarePicker.style.top = yPercentage + \"%\";\n colorSquarePicker.style.left = xPercentage + \"%\";\n s = xPercentage / 100;\n v = 1 - yPercentage / 100;\n colorChange();\n}\n\nfunction csDownTouch(event) {\n tracked = event.currentTarget;\n let rect = event.target.getBoundingClientRect();\n let offsetX = event.targetTouches[0].clientX - rect.left;\n let offsetY = event.targetTouches[0].clientY - rect.top;\n let xPercentage = ((offsetX + 1) / 240) * 100;\n let yPercentage = ((offsetY + 1) / 160) * 100;\n yPercentage = yPercentage.toFixed(2);\n xPercentage = xPercentage.toFixed(2)\n colorSquarePicker.style.top = yPercentage + \"%\";\n colorSquarePicker.style.left = xPercentage + \"%\";\n s = xPercentage / 100;\n v = 1 - yPercentage / 100;\n colorChange();\n}\n\nfunction mouseUp(event) {\n tracked = null;\n}\n\nfunction hueDown(event) {\n tracked = event.currentTarget;\n let xPercentage = ((event.offsetX - 9) / 220) * 100;\n xPercentage = xPercentage.toFixed(2);\n huePicker.style.left = xPercentage + \"%\";\n h = xPercentage / 100;\n hueChange();\n}\n\nfunction hueDownTouch(event) {\n tracked = event.currentTarget;\n let rect = event.target.getBoundingClientRect();\n let offsetX = event.targetTouches[0].clientX - rect.left;\n let xPercentage = ((offsetX - 9) / 220) * 100;\n xPercentage = xPercentage.toFixed(2);\n huePicker.style.left = xPercentage + \"%\";\n h = xPercentage / 100;\n hueChange();\n}\n\nfunction hueChange() {\n let rgb = hsvToRgb(h, 1, 1)\n colorSquare.style.background = `rgba(${rgb[0]},${rgb[1]},${rgb[2]},1)`;\n colorChange();\n}\n\nfunction colorChange() {\n let rgb = hsvToRgb(h, s, v);\n r = rgb[0];\n g = rgb[1];\n b = rgb[2];\n hexValue = RGBAToHex();\n colorChangeCallback();\n}\n\nfunction alphaDown(event) {\n tracked = event.currentTarget;\n let xPercentage = ((event.offsetX - 9) / 220) * 100;\n xPercentage = xPercentage.toFixed(2);\n alphaPicker.style.left = xPercentage + \"%\";\n a = xPercentage / 100;\n colorChange();\n}\n\nfunction alphaDownTouch(event) {\n tracked = event.currentTarget;\n let rect = event.target.getBoundingClientRect();\n let offsetX = event.targetTouches[0].clientX - rect.left;\n let xPercentage = ((offsetX - 9) / 220) * 100;\n xPercentage = xPercentage.toFixed(2);\n let picker = document.querySelector(\"#alpha-picker\");\n picker.style.left = xPercentage + \"%\";\n a = xPercentage / 100;\n colorChange();\n}\n\n//Math algorithms\nfunction hsvToRgb(h, s, v) {\n var r, g, b;\n\n var i = Math.floor(h * 6);\n var f = h * 6 - i;\n var p = v * (1 - s);\n var q = v * (1 - f * s);\n var t = v * (1 - (1 - f) * s);\n\n switch (i % 6) {\n  case 0:\n   r = v, g = t, b = p;\n   break;\n  case 1:\n   r = q, g = v, b = p;\n   break;\n  case 2:\n   r = p, g = v, b = t;\n   break;\n  case 3:\n   r = p, g = q, b = v;\n   break;\n  case 4:\n   r = t, g = p, b = v;\n   break;\n  case 5:\n   r = v, g = p, b = q;\n   break;\n }\n\n return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n}\n\nfunction RGBAToHex() {\n let rHex = r.toString(16);\n let gHex = g.toString(16);\n let bHex = b.toString(16);\n\n if (rHex.length == 1)\n  rHex = \"0\" + rHex;\n if (gHex.length == 1)\n  gHex = \"0\" + gHex;\n if (bHex.length == 1)\n  bHex = \"0\" + bHex;\n\n\n return (\"#\" + rHex + gHex + bHex).toUpperCase();\n}\n\nfunction rgbToHSV(r, g, b, update) {\n    let rperc, gperc, bperc,max,min,diff,pr,hnew,snew,vnew;\n    rperc = r / 255;\n    gperc = g / 255;\n    bperc = b / 255;\n    max = Math.max(rperc, gperc, bperc);\n    min = Math.min(rperc, gperc, bperc);\n    diff = max - min;\n\n    vnew = max;\n    (vnew == 0) ? snew = 0 : snew = diff / max ;\n\n    for (let i=0;i<3;i++) {\n      if ([rperc,gperc,bperc][i] === max) {\n        pr=i;\n        break;\n      }\n    }\n    if (diff==0) {\n      hnew = 0;\n      if (update) {\n        h=hnew;\n        s=snew;\n        v=vnew;\n        hueChange();\n        return;\n      }\n      else {\n        return {h:hnew,s:snew,v:vnew};\n      }\n    }\n    else {\n      switch (pr) {\n        case 0:\n          hnew=60*(((gperc-bperc)/diff)%6)/360\n          break;\n        case 1:\n          hnew=60*(((bperc-rperc)/diff)+2)/360\n          break;\n        case 2:\n          hnew=60*(((rperc-gperc)/diff)+4)/360\n          break;\n      }\n      if (hnew < 0) hnew+=6;\n    }\n\n    if (update) {\n      h=hnew;\n      s=snew;\n      v=vnew;\n      hueChange();\n    }\n    else {\n      return {h:hnew,s:snew,v:vnew};\n    }\n}\n\nconst handleInputHex = (event) => {\n  setColor(event.target.value);\n  dispatch('colorchange', {r,g,b,a});\n}\n\nconst fixRGB = (value) => Math.min(255, Math.max(0, value | 0));\n\nconst handleInputR = (event) => {\n  r = fixRGB(event.target.value);\n  const rgba = {r,g,b,a};\n  setColor(rgba)\n  dispatch(\"colorChange\", rgba)\n}\n\nconst handleInputG = (event) => {\n  g = fixRGB(event.target.value);\n  const rgba = {r,g,b,a};\n  setColor(rgba)\n  dispatch(\"colorChange\", rgba)\n}\n\n\nconst handleInputB = (event) => {\n  b = fixRGB(event.target.value);\n  const rgba = {r,g,b,a};\n  setColor(rgba)\n  dispatch(\"colorChange\", rgba)\n}\n\nconst handleInputA = (event) => {\n  a = Math.min(0, Math.max(1, parseFloat(event.target.value) | 0))\n  const rgba = {r,g,b,a};\n  setColor(rgba)\n  dispatch(\"colorChange\", rgba)\n}\n\nconst nums = \"0123456789\";\nconst handleKeypressRGB = (event) => {\n  if(nums.indexOf(event.key) === -1)\n    event.preventDefault();\n}\n\nconst handleKeypressA = (event) => {\n  if(nums.concat(\".\").indexOf(event.key) === -1)\n    event.preventDefault()\n}\n\n\n$: fixedAlpha = Math.round(a * 100) / 100;\n</script>\n\n<div class=\"main-container {className}\">\n\n  <div bind:this={colorSquare} class=\"colorsquare size\">\n      <div class=\"saturation-gradient\">\n          <div class=\"value-gradient\">\n              <div bind:this={colorSquarePicker} class=\"colorsquare-picker\"></div>\n              <div bind:this={colorSquareEvent} class=\"colorsquare-event\" on:mousedown={csDown} on:touchstart={csDownTouch}></div>\n          </div>\n      </div>\n  </div>\n\n  <div class=\"hue-selector\">\n      <div bind:this={huePicker} class=\"hue-picker\"></div>\n      <div bind:this={hueEvent} class=\"hue-event\" on:mousedown={hueDown} on:touchstart={hueDownTouch}></div>\n  </div>\n\n  {#if alpha}\n    <div class=\"alpha-selector\">\n      <div class=\"alpha-value\"></div>\n      <div bind:this={alphaPicker} class=\"alpha-picker\"></div>\n      <div bind:this={alphaEvent} class=\"alpha-event\" on:mousedown={alphaDown} on:touchstart={alphaDownTouch}></div>\n    </div>\n  {/if}\n\n  <div class=\"color-info-box\">\n    <div class=\"color-picked-bg\">\n      <div class=\"color-picked\" style=\"background-color: rgba({r},{g},{b},{a})\"></div>\n    </div>\n\n    <div class=\"hex-text-block\">\n      <input class=\"text text-hex\" value={hexValue} on:input={handleInputHex}/>\n    </div>\n\n    <div class=\"rgb-text-div\">\n      <div class=\"rgb-text-block\">\n        <input\n          type=\"text\"\n          class=\"text text-rgba\"\n          value={r}\n          maxlength={3}\n          on:input={handleInputR}\n          on:keypress={handleKeypressRGB}\n        />\n        <div class=\"text-label\">R</div>\n      </div>\n\n      <div class=\"rgb-text-block\">\n        <input\n          type=\"text\"\n          class=\"text text-rgba\"\n          value={g}\n          maxlength={3}\n          on:input={handleInputG}\n          on:keypress={handleKeypressRGB}\n        />\n        <div class=\"text-label\">G</div>\n      </div>\n\n      <div class=\"rgb-text-block\">\n        <input\n          type=\"text\"\n          class=\"text text-rgba\"\n          value={b}\n          maxlength={3}\n          on:input={handleInputB}\n          on:keypress={handleKeypressRGB}\n        />\n        <div class=\"text-label\">B</div>\n      </div>\n\n      {#if alpha}\n        <div class=\"rgb-text-block\">\n          <input\n            type=\"text\"\n            class=\"text text-rgba\"\n            value={fixedAlpha}\n            on:input={handleInputA}\n            on:keypress={handleKeypressA}\n          />\n          <div class=\"text-label\">A</div>\n        </div>\n      {/if}\n    </div>\n  </div>\n\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}